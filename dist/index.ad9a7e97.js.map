{"mappings":"AAIE,MAAMI,aAAa,GAAG;IACpBC,aAAa,EAAE,CACbF,GADa,EAEbG,KAFa,EAGb,GAAGC,QAAQ,AAHE,GAIG;QAChB,MAAMC,OAAO,GAAG;YACdL,GADc;YAEdM,IAAI,EAAEN,GAAG,CAACM,IAFI;YAGdC,GAAG,EAAEP,GAAG,CAACO,GAHK;YAIdJ,KAAK,EAAE;gBAAE,GAAGA,KAAL;gBAAYC,QAAAA;aAAZ;SAJT,AAAgB;QAMhB,OAAOC,OAAP,CAAA;KACD;CAbH,AAAsB;AAgBtB,MAAMG,MAAM,GAAG,CAACC,WAAD,EAA2BC,SAA3B,GAAyD;IACtE,IAAI;QAAC,QAAD;QAAW,QAAX;KAAA,CAAqBC,QAArB,CAA8B,OAAOF,WAArC,CAAJ,EAAuD;QACrDC,SAAS,EAAEE,WAAX,CAAuBC,QAAQ,CAACC,cAAT,CAAwBL,WAAW,EAAEM,QAAb,EAAxB,CAAvB,CAAAL,CAAAA;QACA,OAAA;KACD;IAED,MAAMM,gBAAgB,GAAGH,QAAQ,CAACX,aAAT,CAAuBO,WAAW,CAACT,GAAnC,CAAzB,AANsE,EAQtE,oCAFA;IAGAiB,MAAM,CAACC,IAAP,CAAYT,WAAW,EAAEN,KAAzB,CAAA,CACGgB,MADH,CACWZ,CAAAA,GAAD,GAASA,GAAG,KAAK,UAD3B,CAAA,CAEGa,OAFH,CAEYC,CAAAA,QAAD,GAAc;QACrBL,gBAAgB,CAACK,QAAD,CAAhB,GAA6BZ,WAAW,CAACN,KAAZ,CAAkBkB,QAAlB,CAA7B,CAAAL;KAHJ,CAAA,CATsE,CAetE,sCAFG;IAGHP,WAAW,EAAEN,KAAb,EAAoBC,QAApB,CAA6BgB,OAA7B,CAAqC,CAACE,KAAD,GAAwB;QAC3Dd,MAAM,CAACc,KAAD,EAAQN,gBAAR,CAAN,CAAAR;KADF,CAEC,CAAA;IAEDE,SAAS,EAAEE,WAAX,CAAuBI,gBAAvB,CAAA,CApBsE,CAoB5B,0GAA1CN;CApBF,AAqBC;AAED,MAAMa,QAAQ,GAAG,IAAM;IACrB,OACE,aADF,CAAA,aAAA,CAAA,KAAA,EAAA;QACO,QAAA,EAAO,qBAAP;KAAL,EACE,aADF,CAAA,aAAA,CAAA,KAAA,EAAA;QACO,EAAE,EAAC,SAAH;KAAL,EACE,aAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,gBAAA,CADF,EAEE,aAFF,CAAA,aAAA,CAAA,OAAA,EAAA;QAGI,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,0CAAZ;KAFF,CAFF,CADF,CADF,CAIM;CALR,AAYC;AAEDf,MAAM,CAACe,QAAQ,EAAA,EAAmBV,QAAQ,CAACW,aAAT,CAAuB,MAAvB,CAA5B,CAAN,CAAAhB","sources":["index.tsx"],"sourcesContent":["interface FrameworkEl extends JSX.Element {\r\n    tag: any;\r\n  }\r\n  \r\n  const MiniFramework = {\r\n    createElement: (\r\n      tag: JSX.Element,\r\n      props: any,\r\n      ...children: any[]\r\n    ): FrameworkEl => {\r\n      const element = {\r\n        tag,\r\n        type: tag.type,\r\n        key: tag.key,\r\n        props: { ...props, children },\r\n      };\r\n      return element;\r\n    },\r\n  };\r\n  \r\n  const render = (frameworkEl: FrameworkEl, container: Element | null) => {\r\n    if ([\"string\", \"number\"].includes(typeof frameworkEl)) {\r\n      container?.appendChild(document.createTextNode(frameworkEl?.toString()));\r\n      return;\r\n    }\r\n  \r\n    const actualDOMElement = document.createElement(frameworkEl.tag);\r\n  \r\n    // Apply Props to actual DOM Element\r\n    Object.keys(frameworkEl?.props)\r\n      .filter((key) => key !== \"children\")\r\n      .forEach((property) => {\r\n        actualDOMElement[property] = frameworkEl.props[property];\r\n      });\r\n  \r\n    // Render children inside this element\r\n    frameworkEl?.props?.children.forEach((child: FrameworkEl) => {\r\n      render(child, actualDOMElement);\r\n    });\r\n  \r\n    container?.appendChild(actualDOMElement); // Happens once, unless the DOM already exists and we just need to replace something on the child element.\r\n  };\r\n  \r\n  const myMarkup = () => {\r\n    return (\r\n      <div data-x=\"data attribute test\">\r\n        <div id=\"id-test\">\r\n          <h1>Mini Framework</h1>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Part 2: data binding & hooks coming soon\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  render(myMarkup() as FrameworkEl, document.querySelector(\"#app\"));"],"names":["FrameworkEl","JSX","Element","tag","MiniFramework","createElement","props","children","element","type","key","render","frameworkEl","container","includes","appendChild","document","createTextNode","toString","actualDOMElement","Object","keys","filter","forEach","property","child","myMarkup","querySelector"],"version":3,"file":"index.ad9a7e97.js.map","sourceRoot":"/__parcel_source_root/"}